pipeline{
    agent {
        label 'master'
    }
    parameters {
        string(name: 'AWS_REGION', defaultValue: 'us-east-1', description: '')
    }
    stages{
        stage('Install AWS CLI') {
            steps {
                script {
                    sh """
                    sudo apt update 
                    sudo apt install awscli -y
                    """
                }
            }
        }
        stage('Getting AWS Credentials') {
            steps {
                script {
                   def awsCredentialsId = 'aws-cred'
                   withCredentials([[
                        $class: 'AmazonWebServicesCredentialsBinding',
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                        credentialsId: awsCredentialsId,
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                    ]]) {
                        aws_credentials()

                        sh """
                            aws s3 ls
                            aws ecr delete-repository --repository-name sixfure-auth --force || true
                            aws ecr delete-repository --repository-name sixfure-db --force || true
                            aws ecr delete-repository --repository-name sixfure-redis --force || true
                            aws ecr delete-repository --repository-name sixfure-ui --force || true
                            aws ecr delete-repository --repository-name sixfure-weather --force || true
                        """
                   } 
                }
            }
        }
        stage('Clean Up') {
            steps {
                script {
                    sh """
                        sudo rm -rf $HOME/.aws
                    """
                }
            }
        }
    }
}


def aws_credentials() {
sh """    
sudo rm -rf $HOME/.aws || true
sudo mkdir -p $HOME/.aws || true
sudo chown -R jenkins:jenkins $HOME/.aws

cat <<EOF >  $HOME/.aws/credentials
[default]
aws_access_key_id = ${AWS_ACCESS_KEY_ID}
aws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}
EOF

cat <<EOF >  $HOME/.aws/config
[default]
region = ${params.AWS_REGION}
output = json
EOF
"""
}








pipeline {
    agent {
        label 'master'
    }
    parameters {
        string(name: 'AWS_REGION', defaultValue: 'us-east-1', description: '')
    }
    stages {
        stage('Install AWS CLI') {
            steps {
                script {
                    sh """
                    sudo apt update 
                    sudo apt install awscli -y
                    """
                }
            }
        }
        stage('Getting AWS Credentials') {
            steps {
                script {
                    def awsCredentialsId = 'aws-cred'
                    try {
                        withCredentials([[
                            $class: 'AmazonWebServicesCredentialsBinding',
                            accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                            credentialsId: awsCredentialsId,
                            secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                        ]]) {
                            aws_credentials()
                            sh """
                                aws s3 ls
                                aws ecr delete-repository --repository-name sixfure-auth --force
                                aws ecr delete-repository --repository-name sixfure-db --force
                                aws ecr delete-repository --repository-name sixfure-redis --force
                                aws ecr delete-repository --repository-name sixfure-ui --force
                                aws ecr delete-repository --repository-name sixfure-weather --force
                            """
                        }
                    } catch (Exception e) {
                        echo "Error: ${e.message}"
                        currentBuild.result = 'FAILURE'
                    }
                }
            }
        }
        // stage('Clean Up') {
        //     steps {
        //         script {
        //             sh """
        //                 rm -f $HOME/.aws/credentials
        //             """
        //         }
        //     }
        // }
    }
}

def aws_credentials() {
sh """    
sudo rm -rf $HOME/.aws || true
sudo mkdir -p $HOME/.aws || true
sudo chown -R jenkins:jenkins $HOME/.aws

cat <<EOF >  $HOME/.aws/credentials
[default]
aws_access_key_id = ${AWS_ACCESS_KEY_ID}
aws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}
EOF

cat <<EOF >  $HOME/.aws/config
[default]
region = ${params.AWS_REGION}
output = json
EOF
"""
}
