version: '3.8'
services:
  db:
    container_name: sixfure-db
    image: devopseasylearning/sixfure-db:DB_IMAGE_VERSION # Specify the desired image tag here
    ports:
      - "3306:3306"
    expose:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: WEATHER_APP_MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: sixfure
      MYSQL_USER: sixfure
      MYSQL_PASSWORD: WEATHER_APP_MYSQL_PASSWORD
    volumes:
      - ./db-data:/var/lib/mysql
    networks:
      - sixfure
    restart: always

  redis:
    container_name: sixfure-redis
    image: devopseasylearning/sixfure-redis:REDIS_IMAGE_VERSION # Specify the desired image tag here
    ports:
      - "6379:6379"
    expose:
      - "6379"
    environment:
      REDIS_USER: WEATHER_APP_REDIS_PASSWORD_USERNAME
      REDIS_PASSWORD: WEATHER_APP_REDIS_PASSWORD
    volumes:
      - ./redis-data:/data
    networks:
      - sixfure
    restart: always

  ui:
    container_name: sixfure-ui
    image: devopseasylearning/sixfure-ui:UI_IMAGE_VERSION # Specify the desired image tag here
    ports:
      - "3000:3000"
    expose:
      - "3000"
    environment:
      AUTH_HOST: auth
      AUTH_PORT: 8080
      WEATHER_HOST: weather
      WEATHER_PORT: 5000
      REDIS_USER: redis
      REDIS_PASSWORD: redis
    networks:
      - sixfure
    restart: always

  weather:
    container_name: sixfure-weather
    image: devopseasylearning/sixfure-weather:WEATHER_IMAGE_VERSION # Specify the desired image tag here
    ports:
      - "5000:5000"
    expose:
      - "5000"
    environment:
      APIKEY: WEATHER_API-TOKEN
    networks:
      - sixfure
    restart: always

  auth:
    container_name: sixfure-auth
    image: devopseasylearning/sixfure-auth:AUTH_IMAGE_VERSION # Specify the desired image tag here
    ports:
      - "8070:8080"
    environment:
      DB_HOST: db
      DB_PASSWORD: my-secret-pw
    networks:
      - sixfure
    expose:
      - "8080"
    restart: always

networks:
  sixfure:
    driver: bridge
